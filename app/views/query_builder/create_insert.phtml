public function <?= $this->function_name ?>($dbh<?
foreach ($this->variables as $name=>$setting) {
    if(!empty($setting['func_param'])){
        echo ', $' . $name;
    }
}
?>){
<?= $this->custom_header_code; ?>

$runQuery="INSERT INTO  ";
try {


<?
foreach ($this->frome_tables as $one) {
    echo '$runQuery.="';

    echo '{' . $one['table_variable'] . '}';

    if (!empty($one['table_alias'])) {
        echo " as {$one['table_alias']}";
    }



    echo "\";\n";

    //insert only support ont table;
    break;
}
?>

$bind_arr = array();
$columns = "(";
$values = " values( ";
<?
$first = true;
foreach ($this->columns as $one) {
    if (!$first) {
        echo '$' . "columns .=',`{$one['column_name']}`';\n";
        echo '$' . "values .=',';";
    } else {
        echo '$' . "columns .=' `{$one['column_name']}`';\n";
    }
    $first = false;




    if ($one['type'] === 'variable') {
        echo '$' . "values .=':{$one['value']}';\n";
    } else if ($one['type'] === 'pure') {
        echo '$' . "values .=':fix_{$one['column_name']}';\n";
        echo '$' . "bind_arr[':fix_{$one['column_name']}']='" . str_replace("'", "\\" . "'", $one['value']) . "';";
    } else if ($one['type'] === 'function') {
        echo '$' . "values .='{$one['value']}';\n";
    }
    echo "\n";
}

echo '$columns .= ")";' . "\n";
echo '$values .= ") ";' . "\n";

echo '$runQuery.=$columns.$values;';
?>

<?
if ($this->insert_update_method) {
    echo "\n";
    echo '$updateStr=\' ON DUPLICATE KEY UPDATE \';';
    echo "\n";

    $first = true;
    foreach ($this->columns as $one) {


        if (!$one['is_unique_index']) {

            if (!$first) {
                echo '$' . "updateStr .=',`{$one['column_name']}`=';";
            } else {
                echo '$' . "updateStr .=' `{$one['column_name']}`=';";
            }
            $first = false;


            echo "\n";


            if ($one['type'] === 'variable') {
                echo '$' . "updateStr .=':{$one['value']}';\n";
            } else if ($one['type'] === 'pure') {
                echo '$' . "updateStr .=':fix_{$one['column_name']}';\n";
                echo '$' . "bind_arr[':fix_{$one['column_name']}']='" . str_replace("'", "\\" . "'", $one['value']) . "';\n";
            } else if ($one['type'] === 'function') {
                echo '$' . "updateStr .='{$one['value']}';\n";
            }




            echo "\n";
        }
    }

    echo '$runQuery.=$updateStr;';
    echo "\n";
}
?>



<?
foreach ($this->variables as $name=>$setting) {
    if(!empty($setting['bind_var'])){

        echo '$bind_arr[\':' . $name . '\']=$' . $name . ";\n";
    }
}
?>




$stmt = $dbh->prepare($runQuery);

$stmt_r = $stmt->execute($bind_arr);
if($stmt_r){
<? if ($this->return_last_id): ?>
    return $dbh->lastInsertId ();
<? else: ?>
    return $stmt->rowCount();
<? endif ?>

}
else {

<? if (!empty($this->error_log)): ?>
    <?= $this->error_log ?>('db error info:' . var_export($stmt->errorInfo(), true)." query:".$runQuery);
<? else: ?>
    //$errorMessage='db error info:' . var_export($stmt->errorInfo(), true)." query:".$runQuery;
<? endif ?>
return false;
}


}
catch ( PDOException $x ) {
<? if (!empty($this->error_log)): ?>
    <?= $this->error_log ?>('db error info:' . $x->getMessage()." query:".$runQuery);
<? else: ?>
    //$errorMessage='db error info:' . $x->getMessage()." query:".$runQuery;
<? endif ?>
throw $x;
}
<?= $this->custom_tailer_code; ?>

}
