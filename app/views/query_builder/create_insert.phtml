<? $used_variables = array(); ?>
public function <?= $this->function_name ?>($dbh<?
foreach ($this->variables as $one) {
    echo ', $' . $one;
}
?>){

try {

$insertClause="INSERT INTO  ";
<?
foreach ($this->frome_tables as $one) {
    echo '$insertClause.="';

    echo '{' . $one['table_variable'] . '}';

    if (!empty($one['table_alias'])) {
        echo " as {$one['table_alias']}";
    }



    echo "\";\n";

    //insert only support ont table;
    break;
}
?>

$bind_arr = array();
$columns = "(";
$values = " values( ";
<?
$first = true;
foreach ($this->columns as $one) {
    if (!$first) {
        echo '$' . "columns .=',`{$one['column_name']}`';\n";
        echo '$' . "values .=',';";
    } else {
        echo '$' . "columns .=' `{$one['column_name']}`';\n";
    }
    $first = false;




    if ($one['type'] === 'variable') {
        echo '$' . "values .=':{$one['value']}';\n";
       
    } else if ($one['type'] === 'pure') {
        echo '$' . "values .=':fix_{$one['column_name']}';\n";
        echo '$' . "bind_arr[':fix_{$one['column_name']}']='" . str_replace("'", "\\" . "'", $one['value']) . "';";
    } else if ($one['type'] === 'function') {
        echo '$' . "values .='{$one['value']}';\n";
    }
    echo "\n";
}

echo '$columns .= ")";' . "\n";
echo '$values .= ") ";' . "\n";

echo '$insertClause.=$columns.$values;';
?>





<?
foreach ($this->variables as $one) {
    if (empty($used_variables[$one])) {
        echo '$bind_arr[\':' . $one . '\']=$' . $one . ";\n";
    }
}
?>




$stmt = $dbh->prepare($insertClause);

$stmt_r = $stmt->execute($bind_arr);
if($stmt_r){
<?if($this->return_last_id):?>
 return $dbh->lastInsertId ();
 <?else:?>
 return $stmt->rowCount();
 <?endif?>

}
else {

//echo 'error info:'.  var_export($stmt->errorInfo(),true);
return false;
}


}
catch ( PDOException $x ) {
//$errorMessage="database error: " . $x->getMessage();
throw $x;
}
}
